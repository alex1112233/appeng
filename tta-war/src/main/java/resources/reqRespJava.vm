public static void httpInteract(boolean useFiddlerProxy) throws Exception {		
		
		
		 BasicCookieStore cookieStore = new BasicCookieStore();		 
	     CloseableHttpClient httpclient = null;
	     try{   
	        if(useFiddlerProxy){
	        	
	        HttpHost proxy = new HttpHost("127.0.0.1", 8888, "http"); 	
	        httpclient = HttpClients.custom()
	                .setDefaultCookieStore(cookieStore)
	                .setProxy(proxy)
	                .build();
	        }else{
	        	httpclient = HttpClients.custom()
		                .setDefaultCookieStore(cookieStore)		                
		                .build();
	        }
	        
	        #foreach( $request in $requestList ) 
	        
	        //request$foreach.count - $request.Url 
	        HttpUriRequest req$foreach.count = RequestBuilder#if($request.method=="POST").post()#else.get()#end
	                       
	                       .setUri(new URI("$request.Url"))
	                       .addHeader("User-Agent", "$userAgent")
	           #set ($map = $request.getPostParams())
	           #foreach ($mapEntry in $map.entrySet())
	                       .addParameter("$mapEntry.key", "$mapEntry.value")    				
			   #end
			               .build();
			        
			   CloseableHttpResponse resp${foreach.count} = httpclient.execute(req$foreach.count); 
			           
			   try{            
			        
			        HttpEntity entity${foreach.count} = resp${foreach.count}.getEntity();	                
	                StringWriter writer$foreach.count = new StringWriter();
	                IOUtils.copy(entity${foreach.count}.getContent(), writer${foreach.count}, "UTF-8");
	              	                
	                System.out.println("resp${foreach.count} status: " + resp${foreach.count}.getStatusLine() + writer${foreach.count}.toString());
	                EntityUtils.consume(entity${foreach.count});
	               
	            } finally {
	                resp${foreach.count}.close();
	            }      
	         #end
	      
	        } finally {
	            httpclient.close();
	        }
	        
	}